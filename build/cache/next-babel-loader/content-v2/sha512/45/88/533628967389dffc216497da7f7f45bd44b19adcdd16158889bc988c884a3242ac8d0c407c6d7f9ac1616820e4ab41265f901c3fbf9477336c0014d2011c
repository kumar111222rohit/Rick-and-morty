{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/nobroker/personal/rick-and-morty/rick-and-morty/components/AppContainer/AppContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport AppContext from '../../services/appContext';\nimport CharacterService from '../../services/character.service';\n\nvar AppContainer = function AppContainer(_ref) {\n  _s();\n\n  var children = _ref.children,\n      characterData = _ref.characterData,\n      episodesData = _ref.episodesData;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showLoader = _React$useState2[0],\n      setLoaderState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(characterData),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      charData = _React$useState4[0],\n      setCharData = _React$useState4[1]; // console.log({ episodesData });\n\n\n  var handlePagination = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log({\n                page: page\n              });\n              _context.next = 3;\n              return CharacterService.fetchCharacterData(page);\n\n            case 3:\n              res = _context.sent;\n              console.log({\n                res: res\n              });\n              setCharData(_objectSpread({}, res));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePagination(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        showLoader: showLoader,\n        setLoaderState: setLoaderState,\n        characterData: charData,\n        episodesData: episodesData,\n        handlePagination: handlePagination\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_s(AppContainer, \"ez8Z2bKSF6oZhmEiBimHIKwP2wA=\");\n\n_c = AppContainer;\nexport default AppContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"sources":["/home/nobroker/personal/rick-and-morty/rick-and-morty/components/AppContainer/AppContainer.tsx"],"names":["React","AppContext","CharacterService","AppContainer","children","characterData","episodesData","useState","showLoader","setLoaderState","charData","setCharData","handlePagination","page","console","log","fetchCharacterData","res"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;AAEA,IAAMC,YAAiE,GAAG,SAApEA,YAAoE,OAIpE;AAAA;;AAAA,MAHLC,QAGK,QAHLA,QAGK;AAAA,MAFLC,aAEK,QAFLA,aAEK;AAAA,MADLC,YACK,QADLA,YACK;;AAAA,wBACgCN,KAAK,CAACO,QAAN,CAAe,IAAf,CADhC;AAAA;AAAA,MACEC,UADF;AAAA,MACcC,cADd;;AAAA,yBAE2BT,KAAK,CAACO,QAAN,CAAeF,aAAf,CAF3B;AAAA;AAAA,MAEEK,QAFF;AAAA,MAEYC,WAFZ,wBAGL;;;AACA,MAAMC,gBAAgB;AAAA,yEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,gBAAAA,IAAI,EAAJA;AAAF,eAAZ;AADwB;AAAA,qBAGNX,gBAAgB,CAACc,kBAAjB,CAAoCH,IAApC,CAHM;;AAAA;AAGlBI,cAAAA,GAHkB;AAIxBH,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,gBAAAA,GAAG,EAAHA;AAAF,eAAZ;AACAN,cAAAA,WAAW,mBAAMM,GAAN,EAAX;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBL,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAOA,sBACC;AAAA,2BACC,QAAC,UAAD,CAAY,QAAZ;AACC,MAAA,KAAK,EAAE;AACNJ,QAAAA,UAAU,EAAVA,UADM;AAENC,QAAAA,cAAc,EAAdA,cAFM;AAGNJ,QAAAA,aAAa,EAAEK,QAHT;AAINJ,QAAAA,YAAY,EAAZA,YAJM;AAKNM,QAAAA,gBAAgB,EAAhBA;AALM,OADR;AAAA,gBASER;AATF;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAeA,CA9BD;;GAAMD,Y;;KAAAA,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport AppContext from '../../services/appContext';\nimport CharacterService from '../../services/character.service';\n\nconst AppContainer: React.FC<{ characterData: any; episodesData: any }> = ({\n\tchildren,\n\tcharacterData,\n\tepisodesData,\n}) => {\n\tconst [showLoader, setLoaderState] = React.useState(true);\n\tconst [charData, setCharData] = React.useState(characterData);\n\t// console.log({ episodesData });\n\tconst handlePagination = async (page) => {\n\t\tconsole.log({ page });\n\n\t\tconst res = await CharacterService.fetchCharacterData(page);\n\t\tconsole.log({ res });\n\t\tsetCharData({ ...res });\n\t};\n\treturn (\n\t\t<>\n\t\t\t<AppContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tshowLoader,\n\t\t\t\t\tsetLoaderState,\n\t\t\t\t\tcharacterData: charData,\n\t\t\t\t\tepisodesData,\n\t\t\t\t\thandlePagination,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</AppContext.Provider>\n\t\t</>\n\t);\n};\n\nexport default AppContainer;\n"]},"metadata":{},"sourceType":"module"}