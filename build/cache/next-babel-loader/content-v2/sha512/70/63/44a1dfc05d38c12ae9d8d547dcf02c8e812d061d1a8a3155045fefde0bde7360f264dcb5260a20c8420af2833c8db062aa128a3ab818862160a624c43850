{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/nobroker/personal/rick-and-morty/rick-and-morty/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { useTranslation } from '../i18n';\nimport Loader from '../components/Loader/Loader';\nimport AppContainer from '../components/AppContainer';\nimport App from '../components/App';\n\nfunction Home(_ref) {\n  _s();\n\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {} : _ref$data;\n\n  var _useTranslation = useTranslation(),\n      _useTranslation2 = _slicedToArray(_useTranslation, 1),\n      t = _useTranslation2[0];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: t('title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      characterData: data,\n      children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"8/i+n86j1+Aux75AhmzAod2S5k8=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/nobroker/personal/rick-and-morty/rick-and-morty/pages/index.tsx"],"names":["React","Head","useTranslation","Loader","AppContainer","App","Home","data","t"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,cAAT,QAA+B,SAA/B;AAGA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,IAAT,OAA4C;AAAA;;AAAA,uBAA5BC,IAA4B;AAAA,MAA5BA,IAA4B,0BAArB,EAAqB;;AAAA,wBAC/BL,cAAc,EADiB;AAAA;AAAA,MACpCM,CADoC;;AAE3C,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,6BACC;AAAA,kBAAQA,CAAC,CAAC,OAAD;AAAT;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,YAAD;AAAc,MAAA,aAAa,EAAED,IAA7B;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA,kBADD;AAWA;;GAbQD,I;UACIJ,c;;;KADJI,I;;AAwCT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { GetServerSideProps } from 'next';\nimport { useTranslation } from '../i18n';\nimport processCharacterData from '../utils/processCharacterData';\nimport CharacterService from '../services/character.service';\nimport Loader from '../components/Loader/Loader';\nimport AppContainer from '../components/AppContainer';\nimport App from '../components/App';\n\nfunction Home({ data = {} }: { data: any }) {\n\tconst [t] = useTranslation();\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{t('title')}</title>\n\t\t\t</Head>\n\t\t\t<AppContainer characterData={data}>\n\t\t\t\t<Loader />\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</>\n\t);\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ res, req }) => {\n\tconst data = await CharacterService.fetchCharacterData();\n\tif (!data) {\n\t\tres.statusCode = 302;\n\t\tres.setHeader('Location', `https://rickandmortyapi.com/`);\n\t\treturn { props: {} };\n\t}\n\tconsole.log(data);\n\treturn;\n\n\tlet userAgent;\n\tif (req) {\n\t\t// if you are on the server and you get a 'req' property from your context\n\t\tuserAgent = req.headers['user-agent']; // get the user-agent from the headers\n\t} else {\n\t\tuserAgent = navigator.userAgent; // if you are on the client you can access the navigator from the window object\n\t}\n\n\treturn {\n\t\tprops: {\n\t\t\tdata: processCharacterData(data),\n\t\t},\n\t};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}