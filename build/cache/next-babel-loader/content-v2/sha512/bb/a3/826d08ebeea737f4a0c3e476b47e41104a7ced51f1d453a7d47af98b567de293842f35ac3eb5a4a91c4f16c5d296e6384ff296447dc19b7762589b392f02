{"ast":null,"code":"import _regeneratorRuntime from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport getURL from '../utils/rickAndMortyUrl';\n\nvar Character = /*#__PURE__*/function () {\n  function Character() {\n    _classCallCheck(this, Character);\n  }\n\n  _createClass(Character, null, [{\n    key: \"makeAPICall\",\n    value: function () {\n      var _makeAPICall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(URL, requestOptions) {\n        var resepone, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(URL, requestOptions);\n\n              case 3:\n                resepone = _context.sent;\n                _context.next = 6;\n                return resepone.json();\n\n              case 6:\n                data = _context.sent;\n                return _context.abrupt(\"return\", data);\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                throw _context.t0;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      function makeAPICall(_x, _x2) {\n        return _makeAPICall.apply(this, arguments);\n      }\n\n      return makeAPICall;\n    }()\n  }, {\n    key: \"fetchCharacterData\",\n    value: function () {\n      var _fetchCharacterData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var requestOptions;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                requestOptions = {\n                  method: 'GET',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                return _context2.abrupt(\"return\", Character.makeAPICall(getURL('FETCH_CHARACTER_DATA'), requestOptions));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function fetchCharacterData() {\n        return _fetchCharacterData.apply(this, arguments);\n      }\n\n      return fetchCharacterData;\n    }()\n  }]);\n\n  return Character;\n}();\n\nexport { Character as default };","map":{"version":3,"sources":["/home/nobroker/personal/rick-and-morty/rick-and-morty/services/character.service.ts"],"names":["getURL","Character","URL","requestOptions","fetch","resepone","json","data","method","headers","makeAPICall"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;;IAEqBC,S;;;;;;;;mGACKC,G,EAAKC,c;;;;;;;;uBAELC,KAAK,CAACF,GAAD,EAAMC,cAAN,C;;;AAAtBE,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbC,gBAAAA,I;iDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQFJ,gBAAAA,c,GAAiB;AACtBK,kBAAAA,MAAM,EAAE,KADc;AAEtBC,kBAAAA,OAAO,EAAE;AACR,oCAAgB;AADR;AAFa,iB;kDAMhBR,SAAS,CAACS,WAAV,CAAsBV,MAAM,CAAC,sBAAD,CAA5B,EAAsDG,cAAtD,C;;;;;;;;;;;;;;;;;;;;;SAnBYF,S","sourcesContent":["import getURL from '../utils/rickAndMortyUrl';\n\nexport default class Character {\n\tstatic async makeAPICall(URL, requestOptions) {\n\t\ttry {\n\t\t\tconst resepone = await fetch(URL, requestOptions);\n\t\t\tconst data = await resepone.json();\n\t\t\treturn data;\n\t\t} catch (e) {\n\t\t\t//e\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tstatic async fetchCharacterData() {\n\t\tconst requestOptions = {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t};\n\t\treturn Character.makeAPICall(getURL('FETCH_CHARACTER_DATA'), requestOptions);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}