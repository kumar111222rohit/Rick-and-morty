{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nobroker/personal/rick-and-morty/rick-and-morty/components/AppContainer/AppContainer.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport AppContext from '../../services/appContext';\nimport CharacterService from '../../services/character.service';\n\nconst AppContainer = ({\n  children,\n  characterData,\n  episodesData\n}) => {\n  const [showLoader, setLoaderState] = React.useState(true);\n  const [charData, setCharData] = React.useState(characterData); // console.log({ episodesData });\n\n  const handlePagination = async page => {\n    console.log({\n      page\n    });\n    const nextPageId = page.split('=')[1];\n    const res = await CharacterService.fetchCharacterData(nextPageId);\n    console.log({\n      res\n    });\n    setCharData(_objectSpread({}, res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        showLoader,\n        setLoaderState,\n        characterData: charData,\n        episodesData,\n        handlePagination\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport default AppContainer;","map":{"version":3,"sources":["/home/nobroker/personal/rick-and-morty/rick-and-morty/components/AppContainer/AppContainer.tsx"],"names":["React","AppContext","CharacterService","AppContainer","children","characterData","episodesData","showLoader","setLoaderState","useState","charData","setCharData","handlePagination","page","console","log","nextPageId","split","res","fetchCharacterData"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;AAEA,MAAMC,YAAiE,GAAG,CAAC;AAC1EC,EAAAA,QAD0E;AAE1EC,EAAAA,aAF0E;AAG1EC,EAAAA;AAH0E,CAAD,KAIpE;AACL,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BR,KAAK,CAACS,QAAN,CAAe,IAAf,CAArC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACS,QAAN,CAAeJ,aAAf,CAAhC,CAFK,CAGL;;AACA,QAAMO,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AACA,UAAMG,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAnB;AAEA,UAAMC,GAAG,GAAG,MAAMhB,gBAAgB,CAACiB,kBAAjB,CAAoCH,UAApC,CAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEG,MAAAA;AAAF,KAAZ;AACAP,IAAAA,WAAW,mBAAMO,GAAN,EAAX;AACA,GAPD;;AAQA,sBACC;AAAA,2BACC,QAAC,UAAD,CAAY,QAAZ;AACC,MAAA,KAAK,EAAE;AACNX,QAAAA,UADM;AAENC,QAAAA,cAFM;AAGNH,QAAAA,aAAa,EAAEK,QAHT;AAINJ,QAAAA,YAJM;AAKNM,QAAAA;AALM,OADR;AAAA,gBASER;AATF;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAeA,CA/BD;;AAiCA,eAAeD,YAAf","sourcesContent":["import React from 'react';\nimport AppContext from '../../services/appContext';\nimport CharacterService from '../../services/character.service';\n\nconst AppContainer: React.FC<{ characterData: any; episodesData: any }> = ({\n\tchildren,\n\tcharacterData,\n\tepisodesData,\n}) => {\n\tconst [showLoader, setLoaderState] = React.useState(true);\n\tconst [charData, setCharData] = React.useState(characterData);\n\t// console.log({ episodesData });\n\tconst handlePagination = async (page) => {\n\t\tconsole.log({ page });\n\t\tconst nextPageId = page.split('=')[1];\n\n\t\tconst res = await CharacterService.fetchCharacterData(nextPageId);\n\t\tconsole.log({ res });\n\t\tsetCharData({ ...res });\n\t};\n\treturn (\n\t\t<>\n\t\t\t<AppContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tshowLoader,\n\t\t\t\t\tsetLoaderState,\n\t\t\t\t\tcharacterData: charData,\n\t\t\t\t\tepisodesData,\n\t\t\t\t\thandlePagination,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</AppContext.Provider>\n\t\t</>\n\t);\n};\n\nexport default AppContainer;\n"]},"metadata":{},"sourceType":"module"}