{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nobroker/personal/rick-and-morty/rick-and-morty/pages/index.tsx\";\nimport React from 'react';\nimport Head from 'next/head';\nimport { useTranslation } from '../i18n';\nimport processCharacterData from '../utils/processCharacterData';\nimport CharacterService from '../services/character.service';\nimport Loader from '../components/Loader/Loader';\nimport AppContainer from '../components/AppContainer';\nimport App from '../components/App';\n\nfunction Home({\n  data = {}\n}) {\n  const [t] = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: t('title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      characterData: data,\n      children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\nexport const getServerSideProps = async ({\n  res,\n  req\n}) => {\n  const data = await CharacterService.fetchCharacterData();\n\n  if (!data) {\n    res.statusCode = 302;\n    res.setHeader('Location', `https://rickandmortyapi.com/`);\n    return {\n      props: {}\n    };\n  }\n\n  console.log(data);\n  return;\n  let userAgent;\n\n  if (req) {\n    // if you are on the server and you get a 'req' property from your context\n    userAgent = req.headers['user-agent']; // get the user-agent from the headers\n  } else {\n    userAgent = navigator.userAgent; // if you are on the client you can access the navigator from the window object\n  }\n\n  return {\n    props: {\n      data: processCharacterData(data)\n    }\n  };\n};\nexport default Home;","map":{"version":3,"sources":["/home/nobroker/personal/rick-and-morty/rick-and-morty/pages/index.tsx"],"names":["React","Head","useTranslation","processCharacterData","CharacterService","Loader","AppContainer","App","Home","data","t","getServerSideProps","res","req","fetchCharacterData","statusCode","setHeader","props","console","log","userAgent","headers","navigator"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAI,GAAG;AAAT,CAAd,EAA4C;AAC3C,QAAM,CAACC,CAAD,IAAMR,cAAc,EAA1B;AACA,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,6BACC;AAAA,kBAAQQ,CAAC,CAAC,OAAD;AAAT;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,YAAD;AAAc,MAAA,aAAa,EAAED,IAA7B;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA,kBADD;AAWA;;AAED,OAAO,MAAME,kBAAsC,GAAG,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAC7E,QAAMJ,IAAI,GAAG,MAAML,gBAAgB,CAACU,kBAAjB,EAAnB;;AACA,MAAI,CAACL,IAAL,EAAW;AACVG,IAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACAH,IAAAA,GAAG,CAACI,SAAJ,CAAc,UAAd,EAA2B,8BAA3B;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAP;AACA;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA;AAEA,MAAIW,SAAJ;;AACA,MAAIP,GAAJ,EAAS;AACR;AACAO,IAAAA,SAAS,GAAGP,GAAG,CAACQ,OAAJ,CAAY,YAAZ,CAAZ,CAFQ,CAE+B;AACvC,GAHD,MAGO;AACND,IAAAA,SAAS,GAAGE,SAAS,CAACF,SAAtB,CADM,CAC2B;AACjC;;AAED,SAAO;AACNH,IAAAA,KAAK,EAAE;AACNR,MAAAA,IAAI,EAAEN,oBAAoB,CAACM,IAAD;AADpB;AADD,GAAP;AAKA,CAvBM;AAyBP,eAAeD,IAAf","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { GetServerSideProps } from 'next';\nimport { useTranslation } from '../i18n';\nimport processCharacterData from '../utils/processCharacterData';\nimport CharacterService from '../services/character.service';\nimport Loader from '../components/Loader/Loader';\nimport AppContainer from '../components/AppContainer';\nimport App from '../components/App';\n\nfunction Home({ data = {} }: { data: any }) {\n\tconst [t] = useTranslation();\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{t('title')}</title>\n\t\t\t</Head>\n\t\t\t<AppContainer characterData={data}>\n\t\t\t\t<Loader />\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</>\n\t);\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ res, req }) => {\n\tconst data = await CharacterService.fetchCharacterData();\n\tif (!data) {\n\t\tres.statusCode = 302;\n\t\tres.setHeader('Location', `https://rickandmortyapi.com/`);\n\t\treturn { props: {} };\n\t}\n\tconsole.log(data);\n\treturn;\n\n\tlet userAgent;\n\tif (req) {\n\t\t// if you are on the server and you get a 'req' property from your context\n\t\tuserAgent = req.headers['user-agent']; // get the user-agent from the headers\n\t} else {\n\t\tuserAgent = navigator.userAgent; // if you are on the client you can access the navigator from the window object\n\t}\n\n\treturn {\n\t\tprops: {\n\t\t\tdata: processCharacterData(data),\n\t\t},\n\t};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}