{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/nobroker/personal/rick-and-morty/rick-and-morty/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/nobroker/personal/rick-and-morty/rick-and-morty/components/Character/Character..tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\n\nvar Character = function Character(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useTranslation = useTranslation(['common']),\n      _useTranslation2 = _slicedToArray(_useTranslation, 1),\n      t = _useTranslation2[0];\n\n  var _useStore = useStore(),\n      setLoaderState = _useStore.setLoaderState,\n      characterData = _useStore.characterData;\n\n  console.log(characterData);\n  setLoaderState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Character, \"263zu3iihRFUmyGCP6IRi/gGpR4=\", true);\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/home/nobroker/personal/rick-and-morty/rick-and-morty/components/Character/Character..tsx"],"names":["React","Character","data","useTranslation","t","useStore","setLoaderState","characterData","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,wBAC7CC,cAAc,CAAC,CAAC,QAAD,CAAD,CAD+B;AAAA;AAAA,MAClDC,CADkD;;AAAA,kBAEfC,QAAQ,EAFO;AAAA,MAEjDC,cAFiD,aAEjDA,cAFiD;AAAA,MAEjCC,aAFiC,aAEjCA,aAFiC;;AAGzDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAD,EAAAA,cAAc,CAAC,IAAD,CAAd;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA,WAAP;AACA,CAPD;;GAAML,S;;KAAAA,S;AASN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { CharacterProps } from '../../types/characterData';\n\nconst Character: React.FC<CharacterProps> = ({ data }) => {\n\tconst [t] = useTranslation(['common']);\n\tconst { setLoaderState, characterData } = useStore();\n\tconsole.log(characterData);\n\tsetLoaderState(true);\n\n\treturn <div></div>;\n};\n\nexport default Character;\n"]},"metadata":{},"sourceType":"module"}